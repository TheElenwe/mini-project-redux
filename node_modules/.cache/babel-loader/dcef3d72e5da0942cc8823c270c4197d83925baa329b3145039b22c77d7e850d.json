{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    change: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed.true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-6b4a6.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","change","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","changed","push","price","quantity","totalPrice","title","removeItemFromCart","true","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/home/mystis/Pictures/mini-project-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { uiActions } from './ui-slice';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    change: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed.true\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        'https://react-http-6b4a6.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACpC,CAAC;IACDQ,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvER,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACS,OAAO,GAAG,IAAI;MACpB,IAAI,CAACJ,YAAY,EAAE;QACjBL,KAAK,CAACL,KAAK,CAACe,IAAI,CAAC;UACfF,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdG,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBlB,IAAI,EAAEW,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGT,OAAO,CAACO,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkBA,CAACf,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACS,OAAO,CAACO,IAAI;MAClB,IAAIX,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC/BZ,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACsB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACO,QAAQ,EAAE;MACzB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACN7B,SAAS,CAAC8B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBR,KAAK,EAAE,YAAY;MACnBS,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDAAmD,EACnD;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MAEnBJ,QAAQ,CACN7B,SAAS,CAAC8B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBR,KAAK,EAAE,UAAU;QACjBS,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdb,QAAQ,CACN7B,SAAS,CAAC8B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfR,KAAK,EAAE,QAAQ;QACfS,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG1C,SAAS,CAAC2C,OAAO;AAE5C,eAAe3C,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}