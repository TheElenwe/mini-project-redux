{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        // existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-dc8ba-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Send cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Send cart data failed!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/home/mystis/Pictures/mini-project-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state,action) {\n        const id = action.payload;\n        const existingItem= state.items.find(item => item.id ===id);\n        state.totalQuantity--\n        if(existingItem.quantity ===1){\n            state.items = state.items.filter(item => item.id !== id)\n        }else {\n            existingItem.quantity--\n            // existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n        }\n    },\n  },\n});\n\nexport const sendCartData = (cart) =>{\n  return async(dispatch) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending\",\n          message: \"Sending cart data!\",\n        })\n      );\n      const sendRequest = async () => {\n        const response = await fetch(\n          \"https://react-http-dc8ba-default-rtdb.firebaseio.com/cart.json\",\n          {\n            method: \"PUT\",\n            body: JSON.stringify(cart),\n          }\n        );\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed\");\n        }\n      }\n      try {\n\n     await sendRequest()\n     dispatch(\n      uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Send cart data successfully!\",\n      })\n    );\n      } catch(error){\n       \n          dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"Error\",\n              message: \"Send cart data failed!\",\n            })\n          );\n          }\n     \n   \n  }\n}\nexport const cartActions = cartSlice.actions\n\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBf,IAAI,EAAEQ,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAACC,MAAM,EAAE;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAEJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC;MAC3DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGO,YAAY,CAACM,QAAQ,KAAI,CAAC,EAAC;QAC1BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAK;QACFH,YAAY,CAACM,QAAQ,EAAE;QACvB;MACJ;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAI;EACnC,OAAO,MAAMC,QAAQ,IAAK;IACtBA,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,SAAS;MAChBQ,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CACF,CAAC;MACD,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MAEL,MAAMR,WAAW,CAAC,CAAC;MACnBJ,QAAQ,CACPzB,SAAS,CAAC0B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBP,KAAK,EAAE,SAAS;QAChBQ,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACC,CAAC,CAAC,OAAMU,KAAK,EAAC;MAEVb,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfP,KAAK,EAAE,OAAO;QACdQ,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACD;EAGR,CAAC;AACH,CAAC;AACD,OAAO,MAAMW,WAAW,GAAGtC,SAAS,CAACuC,OAAO;AAE5C,eAAevC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}